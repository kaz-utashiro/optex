=encoding utf8

=head1 NAME

optex - 汎用コマンドオプションラッパー

=head1 VERSION

Version 1.00

=head1 SYNOPSIS

B<optex> I<コマンド> [ B<-M>I<モジュール> ] ...

または I<コマンド> -> B<optex> シンボリックリンク、または

B<optex> I<オプション> [ -l | -m ] ...

    --link,   --ln  create symlink
    --unlink, --rm  remove symlink
    --ls            list link files
    --rc            list rc files
    --nop, -x       disable option processing
    --[no]module    disable module option on arguments

=cut
=head1 DESCRIPTION

B<optex>はPerlモジュールL<Getopt::EX>を利用した汎用コマンドオプション処理ラッパーです。ユーザーはシステム上の任意のコマンドに対して自分自身のオプションエイリアスを定義し、モジュールスタイルの拡張性を提供することができます。

対象のコマンドは引数として与えられます：

    % optex command

またはB<optex>へのシンボリックリンクされたファイルとして：

    command -> optex

設定ファイルF<~/.optex.d/>I<コマンド>F<.rc>が存在する場合、実行前に評価され、その設定を使用してコマンド引数が事前処理されます。


=head2 OPTION ALIASES

macOSのC<date>コマンドを考えてみましょう。これにはC<-I[TIMESPEC]>オプションがありません。B<optex>を使用すると、F<~/.optex.d/date.rc>ファイルに次の設定を準備することで実装することができます。

    option -I        -Idate
    option -Idate    +%F
    option -Iseconds +%FT%T%z
    option -Iminutes +%FT%H:%M%z
    option -Ihours   +%FT%H%z

    option --iso-8601         -I
    option --iso-8601=date    -Idate
    option --iso-8601=seconds -Iseconds
    option --iso-8601=minutes -Iminutes
    option --iso-8601=hours   -Ihours

次のコマンドは期待通りに動作します。

    % optex date -Iseconds

コマンド検索パスにC<< date -> optex >>のシンボリックリンクが見つかった場合、標準コマンドと同じように使用できますが、サポートされていないオプションも使用できます。

    % date -Iseconds

共通の設定はF<~/.optex.d/default.rc>ファイルに保存され、それらのルールはB<optex>を通じて実行されるすべてのコマンドに適用されます。

実際には、C<--iso-8601>オプションはこのように単純に定義することができます：

    option --iso-8601 -I$<shift>

これはほとんどの場合うまく動作しますが、他のオプションの前に単独でC<--iso-8601>オプションがある場合には失敗します：

    % date --iso-8601 -u

=head2 COMMAND ALIASES

コマンドエイリアスは設定ファイルでこのように設定できます：

    [alias]
        pgrep = [ "greple", "-Mperl", "--code" ]

エイリアス名はrcファイルとモジュールディレクトリを見つけるために使用されます。上記の例では、F<~/.optex.d/pgrep.rc>とF<~/.optex.d/pgrep/>が参照されます。

L<CONFIGURATION FILE>セクションを読んでください。

=head2 MACROS

マクロC<define>を使用して複雑な文字列を構成することができます。次の例は、テキスト内の母音を数えるawkスクリプトで、F<~/.optex.d/awk.rc>ファイルに宣言されます。

    define __delete__ /[bcdfgkmnpsrtvwyz]e( |$)/
    define __match__  /ey|y[aeiou]*|[aeiou]+/
    define __count_vowels__ <<EOS
    {
        s = tolower($0);
        gsub(__delete__, " ", s);
        for (count=0; match(s, __match__); count++) {
            s=substr(s, RSTART + RLENGTH);
        }
        print count " " $0;
    }
    EOS
    option --vowels __count_vowels__

これは次のように使用できます：

    % awk --vowels /usr/share/dict/words

複雑なオプションを設定する場合、C<expand>ディレクティブが便利です。C<expand>はC<option>とほぼ同じように動作しますが、ファイルスコープ内でのみ有効であり、コマンドラインオプションでは使用できません。

    expand repository	( -name .git -o -name .svn -o -name RCS )
    expand no_dots	! -name .*
    expand no_version	! -name *,v
    expand no_backup	! -name *~
    expand no_image 	! -iname *.jpg  ! -iname *.jpeg \
			! -iname *.gif  ! -iname *.png
    expand no_archive	! -iname *.tar  ! -iname *.tbz  ! -iname *.tgz
    expand no_pdf	! -iname *.pdf

    option --clean \
            repository -prune -o \
            -type f \
            no_dots \
            no_version no_backup \
            no_image \
            no_archive \
            no_pdf

    % find . --clean -print


=head2 MODULES

B<optex>はモジュール拡張もサポートしています。C<date>の例では、モジュールファイルはF<~/.optex.d/date/>ディレクトリにあります。デフォルトモジュールF<~/.optex.d/date/default.pm>が存在する場合、実行のたびに自動的にロードされます。

これは通常のPerlモジュールなので、パッケージ宣言と最後の真値が必要です。その間には、任意のPerlコードを入れることができます。例えば、次のプログラムはC<date>コマンドを実行する前に環境変数C<LANG>をC<C>に設定します。

    package default;
    $ENV{LANG} = 'C';
    1;

    % /bin/date
    2017年 10月22日 日曜日 18時00分00秒 JST

    % date
    Sun Oct 22 18:00:00 JST 2017

他のモジュールはC<-M>オプションを使用してロードされます。他のオプションとは異なり、C<-M>は引数リストの最初に置かなければなりません。F<~/.optex.d/date/>ディレクトリのモジュールファイルはC<date>コマンド専用です。モジュールがF<~/.optex.d/>ディレクトリに配置されている場合、すべてのコマンドから使用できます。

C<-Mes>モジュールを使用したい場合は、次の内容でF<~/.optex.d/es.pm>ファイルを作成します。

    package es;
    $ENV{LANG} = 'es_ES';
    1;

    % date -Mes
    domingo, 22 de octubre de 2017, 18:00:00 JST

指定されたモジュールがライブラリパスに見つからない場合、B<optex>はオプションを無視し、直ちに引数処理を停止します。無視されたオプションは対象のコマンドにそのまま渡されます。

モジュールはサブルーチンコールと共に使用されます。例えば F<~/.optex.d/env.pm> モジュールは以下のようになります：

    package env;
    sub setenv {
        while (($a, $b) = splice @_, 0, 2) {
            $ENV{$a} = $b;
        }
    }
    1;

それから、より一般的な方法で使用することができます。次の例では、最初のフォーマットは読みやすいですが、特殊文字をエスケープする必要がないため、2番目のものの方がタイプしやすいです。

    % date -Menv::setenv(LANG=de_DE) # need shell quote
    % date -Menv::setenv=LANG=de_DE  # alternative format
    So 22 Okt 2017 18:00:00 JST

オプションエイリアスもモジュールの最後に、特別なリテラル C<__DATA__> の後に宣言することができます。これを使用して、異なる目的のための複数のオプションセットを準備することができます。一般的な B<i18n> モジュールについて考えてみてください：

    package i18n;
    1;
    __DATA__
    option --cn -Menv::setenv(LANG=zh_CN) // 中国語 - 簡体字
    option --tw -Menv::setenv(LANG=zh_TW) // 中国語 - 繁体字
    option --us -Menv::setenv(LANG=en_US) // 英語
    option --fr -Menv::setenv(LANG=fr_FR) // フランス語
    option --de -Menv::setenv(LANG=de_DE) // ドイツ語
    option --it -Menv::setenv(LANG=it_IT) // イタリア語
    option --jp -Menv::setenv(LANG=ja_JP) // 日本語
    option --kr -Menv::setenv(LANG=ko_KR) // 韓国語
    option --br -Menv::setenv(LANG=pt_BR) // ポルトガル語 - ブラジル
    option --es -Menv::setenv(LANG=es_ES) // スペイン語
    option --ru -Menv::setenv(LANG=ru_RU) // ロシア語

これは以下のように使用することができます：

    % date -Mi18n --tw
    2017年10月22日 週日 18時00分00秒 JST

F<~/.optex.d/optex.rc> にオートロードモジュールを宣言することができます：

    autoload -Mi18n --cn --tw --us --fr --de --it --jp --kr --br --es --ru

その後、モジュールオプションなしでそれらを使用することができます。この場合、オプション C<--ru> は自動的に C<-Mi18n --ru> に置き換えられます。

    % date --ru
    воскресенье, 22 октября 2017 г. 18:00:00 (JST)

モジュール C<i18n> は L<Getopt::EX::i18n> として実装されており、この配布に含まれています。したがって、追加のインストールなしで上記のように使用することができます。

=head1 STANDARD MODULES

標準モジュールは C<App::optex> にインストールされており、C<App::optex> プレフィックスの有無にかかわらずアドレス指定することができます。

=over 4

=item -MB<help>

利用可能なオプションリストを表示します。オプション名は置換形式で印刷されるか、定義されていればヘルプメッセージが印刷されます。ヘルプメッセージを省略するには B<-x> オプションを使用します。

オプション B<--man> または B<-h> は、利用可能であればドキュメントを印刷します。オプション B<-l> はモジュールパスを印刷します。オプション B<-m> はモジュール自体を表示します。他のモジュールの後に使用された場合、最後に宣言されたモジュールについての情報を印刷します。次のコマンドは B<second> モジュールについてのドキュメントを表示します。

    optex -Mfirst -Msecond -Mhelp --man

=item -MB<debug>

デバッグメッセージを印刷します。

=item -MB<util::argv>

コマンド引数を操作するモジュール。詳細については L<App::optex::util::argv> を参照してください。

=item -MB<util::filter>

コマンド入出力フィルタを実装するモジュール。詳細については L<App::optex::util::filter> を参照してください。

=back

=head1 Getopt::EX MODULES

独自のモジュールに加えて、B<optex> は C<Getopt::EX> モジュールも使用することができます。インストールされている標準の C<Getopt::EX> モジュールはこれらです。

=over 4

=item -MB<i18n> (L<Getopt::EX::i18n>)

以下の手順でギリシャ暦を表示することができます：

    optex -Mi18n cal --gr

=back

=head1 OPTIONS

これらのオプションは、B<optex> がシンボリックリンクから実行された場合には効果がありません。

=over 4


=item B<--link>, B<--ln> [ I<command> ]

F<~/.optex.d/bin> ディレクトリにシンボリックリンクを作成します。


=item B<--unlink>, B<--rm> [ B<-f> ] [ I<command> ]

F<~/.optex.d/bin> ディレクトリのシンボリックリンクを削除します。


=item B<--ls> [ B<-l> ] [ I<command> ]

F<~/.optex.d/bin> ディレクトリのシンボリックリンクファイルをリストします。


=item B<--rc> [ B<-l> ] [ B<-m> ] [ I<command> ]

F<~/.optex.d> ディレクトリの rc ファイルをリストします。


=item B<--nop>, B<-x> I<command>

オプション操作を停止します。それ以外の場合は完全なパス名を使用してください。


=item B<-->[B<no>]B<module>

B<optex> はデフォルトで対象コマンドのモジュールオプション (-M) を扱います。しかし、同じオプションを独自の目的で使用するコマンドもあります。オプション B<--nomodule> はその動作を無効にします。他のオプション解釈はまだ有効であり、rc ファイルやモジュールファイルでモジュールオプションを使用することに問題はありません。


=item B<--exit> I<status>

通常 B<optex> は実行されたコマンドのステータスで終了します。このオプションはそれをオーバーライドし、指定されたステータスコードで強制終了します。


=back


=head1 CONFIGURATION FILE

起動時に、B<optex> は TOML 形式で書かれることを想定している設定ファイル F<~/.optex.d/config.toml> を読み込みます。

=head2 PARAMETERS

=over 4

=item B<no-module>

B<optex> がモジュールオプション B<-M> を解釈しないコマンドを設定します。対象コマンドがこのリストに見つかった場合、B<optex> にオプション B<--no-module> が与えられたかのように実行されます。

    no-module = [
        "greple",
        "pgrep",
    ]

=item B<alias>

コマンドエイリアスを設定します。例：

    [alias]
        pgrep = [ "greple", "-Mperl", "--code" ]
        hello = "echo -n 'hello world!'"

コマンドエイリアスは、シンボリックリンクとコマンド引数のいずれからも呼び出すことができます。

=back


=head1 FILES AND DIRECTORIES

=over 4


=item F<PERLLIB/App/optex>

システムモジュールディレクトリ。


=item F<~/.optex.d/>

個人のルートディレクトリ。


=item F<~/.optex.d/config.toml>

設定ファイル。


=item F<~/.optex.d/default.rc>

共通のスタートアップファイル。


=item F<~/.optex.d/>I<command>F<.rc>

I<コマンド>用のスタートアップファイル。


=item F<~/.optex.d/>I<command>F</>

I<コマンド>用のモジュールディレクトリ。


=item F<~/.optex.d/>I<command>F</default.pm>

I<コマンド>のデフォルトモジュール。


=item F<~/.optex.d/bin>

シンボリックリンクを保存するデフォルトディレクトリ。

これは必須ではありませんが、B<optex>用のシンボリックリンクを含む特別なディレクトリを作成し、コマンド検索パスに配置すると良いと思われます。そうすることで、パスの追加/削除やシンボリックリンクの作成/削除を簡単に行うことができます。

=back


=head1 ENVIRONMENT

=over 4

=item OPTEX_ROOT

デフォルトのルートディレクトリF<~/.optex.d>を上書きします。

=item OPTEX_CONFIG

デフォルトの設定ファイルF<OPTEX_ROOT/config.toml>を上書きします。

=item OPTEX_MODULE_PATH

コロン(C<:>)で区切られたモジュールパスを設定します。これらは標準パスの前に挿入されます。

=item OPTEX_BINDIR

デフォルトのシンボリックリンクディレクトリF<OPTEX_ROOT/bin>を上書きします。

=back


=head1 SEE ALSO

L<Getopt::EX>, L<Getopt::EX::Loader>, L<Getopt::EX::Module>

L<App::optex::textconv>

L<App::optex::xform>

=head1 AUTHOR

Kazumasa Utashiro


=head1 LICENSE

You can redistribute it and/or modify it under the same terms
as Perl itself.

Copyright ©︎ 2017-2024 Kazumasa Utashiro


=cut
