{
   "Actually, C<--iso-8601> option can be defined simpler as this:\n" : "사실 C<--iso-8601> 옵션은 이렇게 더 간단하게 정의할 수 있습니다:\n",
   "Alias name is used to find rc file and module directory. In the above example, F<~/.optex.d/pgrep.rc> and F<~/.optex.d/pgrep/> will be referred.\n" : "별칭 이름은 rc 파일과 모듈 디렉토리를 찾는 데 사용됩니다. 위의 예에서는 F<~/.optex.d/pgrep.rc>와 F<~/.optex.d/pgrep/>가 참조됩니다.\n",
   "B<optex> I<command> [ B<-M>I<module> ] ...\n" : "B<옵텍스> I<명령> [ B<-M>I<모듈> ] ...\n",
   "B<optex> I<options> [ -l | -m ] ...\n" : "B<옵텍스> I<옵션> [ -l | -m ] ...\n",
   "B<optex> also supports module extension. In the example of C<date>, module file is found at F<~/.optex.d/date/> directory. If default module, F<~/.optex.d/date/default.pm> exists, it is loaded automatically on every execution.\n" : "B<옵텍스>는 모듈 확장도 지원합니다. C<date>의 예에서 모듈 파일은 F<~/.optex.d/date/> 디렉토리에 있습니다. 기본 모듈인 F<~/.optex.d/date/default.pm>이 존재하면 실행할 때마다 자동으로 로드됩니다.\n",
   "B<optex> deals with module option (-M) on target command by default. However, there is a command which also uses same option for own purpose. Option B<--nomodule> disables that behavior. Other option interpretation is still effective, and there is no problem using module option in rc or module files.\n" : "B<옵텍스>는 기본적으로 대상 명령의 모듈 옵션(-M)을 처리합니다. 그러나 동일한 옵션을 자체 목적으로 사용하는 명령도 있습니다. 옵션 B<--nomodule>은 해당 동작을 비활성화합니다. 다른 옵션 해석은 여전히 유효하며, rc 또는 모듈 파일에서 모듈 옵션을 사용하는 데 아무런 문제가 없습니다.\n",
   "B<optex> is a general purpose command option handling wrapper utilizing Perl module L<Getopt::EX>. It enables user to define their own option aliases for any commands on the system, and provide module style extensibility.\n" : "B<옵텍스>는 Perl 모듈 L<Getopt::EX>를 사용하는 범용 명령 옵션 처리 래퍼입니다. 이를 통해 사용자는 시스템의 모든 명령에 대해 고유한 옵션 별칭을 정의하고 모듈 스타일의 확장성을 제공할 수 있습니다.\n",
   "Command alias can be invoked either from symbolic link and command argument.\n" : "명령 별칭은 심볼릭 링크와 명령 인수를 통해 호출할 수 있습니다.\n",
   "Command aliases can be set in the configuration file like this:\n" : "명령 별칭은 구성 파일에서 다음과 같이 설정할 수 있습니다:\n",
   "Common configuration is stored in F<~/.optex.d/default.rc> file, and those rules are applied to all commands executed through B<optex>.\n" : "공통 설정은 F<~/.optex.d/default.rc> 파일에 저장되며, 해당 규칙은 B<옵텍스>를 통해 실행되는 모든 명령에 적용됩니다.\n",
   "Common startup file.\n" : "공통 시작 파일.\n",
   "Complex string can be composed using macro C<define>. Next example is an awk script to count vowels in the text, to be declared in file F<~/.optex.d/awk.rc>.\n" : "매크로 C<define>을 사용하여 복잡한 문자열을 구성할 수 있습니다. 다음 예는 텍스트의 모음을 계산하는 awk 스크립트로, 파일 F<~/.optex.d/awk.rc>에 선언됩니다.\n",
   "Configuration file.\n" : "구성 파일.\n",
   "Create symbolic link in F<~/.optex.d/bin> directory.\n" : "F<~/.optex.d/bin> 디렉터리에 심볼릭 링크를 만듭니다.\n",
   "Default directory to store symbolic links.\n" : "심볼릭 링크를 저장할 기본 디렉토리.\n",
   "Default module for I<command>.\n" : "I<명령>의 기본 모듈.\n",
   "If a symbolic link C<< date -> optex >> is found in command search path, you can use it just same as standard command, but with unsupported options.\n" : "명령어 검색 경로에서 심볼릭 링크 C<< date -> optex >>가 발견되면 표준 명령어와 동일하게 사용할 수 있지만 지원되지 않는 옵션을 사용할 수 있습니다.\n",
   "If the configuration file F<~/.optex.d/>I<command>F<.rc> exists, it is evaluated before execution and command arguments are pre-processed using it.\n" : "구성 파일 F<~/.optex.d/>I<command>F<.rc>가 존재하면 실행 전에 평가되고 명령 인수는 이를 사용하여 사전 처리됩니다.\n",
   "If you want use C<-Mes> module, make a file F<~/.optex.d/es.pm> with following content.\n" : "C<-Mes> 모듈을 사용하려면 다음과 같은 내용으로 F<~/.optex.d/es.pm> 파일을 생성합니다.\n",
   "In addition to its own modules, B<optex> can also use C<Getopt::EX> modules. The standard C<Getopt::EX> modules installed are these.\n" : "B<옵텍스>는 자체 모듈 외에도 C<Getopt::EX> 모듈을 사용할 수 있습니다. 설치된 표준 C<Getopt::EX> 모듈은 다음과 같습니다.\n",
   "List rc files in F<~/.optex.d> directory.\n" : "F<~/.optex.d> 디렉터리에 rc 파일을 나열합니다.\n",
   "List symbolic link files in F<~/.optex.d/bin> directory.\n" : "F<~/.optex.d/bin> 디렉토리에 심볼릭 링크 파일을 나열합니다.\n",
   "Module C<i18n> is implemented as L<Getopt::EX::i18n> and included in this distribution. So it can be used as above without additional installation.\n" : "모듈 C<i18n>은 L<Getopt::EX::i18n>으로 구현되어 이 배포에 포함되어 있습니다. 따라서 추가 설치 없이 위와 같이 사용할 수 있습니다.\n",
   "Module directory for I<command>.\n" : "I<명령>의 모듈 디렉터리.\n",
   "Module is also used with subroutine call. Suppose F<~/.optex.d/env.pm> module look like:\n" : "모듈은 서브루틴 호출에도 사용됩니다. F<~/.optex.d/env.pm> 모듈이 다음과 같다고 가정해 보겠습니다:\n",
   "Module to implement command input/output filters. See L<App::optex::util::filter> for detail.\n" : "명령 입력/출력 필터를 구현하는 모듈. 자세한 내용은 L<App::optex::util::filter>를 참조하세요.\n",
   "Module to manipulate command argument. See L<App::optex::util::argv> for detail.\n" : "명령 인수를 조작하는 모듈입니다. 자세한 내용은 L<App::optex::util::argv>를 참조하세요.\n",
   "Option B<--man> or B<-h> will print document if available. Option B<-l> will print module path. Option B<-m> will show the module itself. When used after other modules, print information about the last declared module. Next command show the document about B<second> module.\n" : "옵션 B<--맨> 또는 B<-h>는 사용 가능한 경우 문서를 인쇄합니다. 옵션 B<-l>은 모듈 경로를 인쇄합니다. B<-m> 옵션은 모듈 자체를 표시합니다. 다른 모듈 뒤에 사용하면 마지막으로 선언된 모듈에 대한 정보를 인쇄합니다. 다음 명령은 B<초> 모듈에 대한 문서를 표시합니다.\n",
   "Option aliases can be also declared in the module, at the end of file, following special literal C<__DATA__>. Using this, you can prepare multiple set of options for different purposes. Think about generic B<i18n> module:\n" : "옵션 별칭은 모듈에서 파일 끝의 특수 리터럴 C<__DATA__> 뒤에 선언할 수도 있습니다. 이를 사용하여 다양한 목적에 맞는 여러 옵션 집합을 준비할 수 있습니다. 일반 B<i18n> 모듈을 생각해 보세요:\n",
   "Other modules are loaded using C<-M> option. Unlike other options, C<-M> have to be placed at the beginning of argument list. Module files in F<~/.optex.d/date/> directory are used only for C<date> command. If the module is placed on F<~/.optex.d/> directory, it can be used from all commands.\n" : "다른 모듈은 C<-M> 옵션을 사용하여 로드합니다. 다른 옵션과 달리 C<-M>은 인자 목록의 맨 앞에 위치해야 합니다. F<~/.optex.d/date/> 디렉토리에 있는 모듈 파일은 C<date> 명령에만 사용됩니다. 모듈이 F<~/.optex.d/> 디렉토리에 있으면 모든 명령어에서 사용할 수 있습니다.\n",
   "Override default configuration file F<OPTEX_ROOT/config.toml>.\n" : "기본 구성 파일 F<OPTEX_ROOT/config.toml>을 재정의합니다.\n",
   "Override default root directory F<~/.optex.d>.\n" : "기본 루트 디렉토리 F<~/.optex.d> 재정의.\n",
   "Override default symbolic link directory F<OPTEX_ROOT/bin>.\n" : "기본 심볼릭 링크 디렉토리 F<OPTEX_ROOT/bin>을 재정의합니다.\n",
   "Personal root directory.\n" : "개인 루트 디렉터리.\n",
   "Print available option list. Option name is printed with substitution form, or help message if defined. Use B<-x> option to omit help message.\n" : "사용 가능한 옵션 목록을 인쇄합니다. 옵션 이름이 대체 양식 또는 정의된 경우 도움말 메시지와 함께 인쇄됩니다. 도움말 메시지를 생략하려면 B<-x> 옵션을 사용합니다.\n",
   "Print debug messages.\n" : "디버그 메시지를 인쇄합니다.\n",
   "Read L<CONFIGURATION FILE> section.\n" : "L<구성 파일> 섹션을 읽습니다.\n",
   "Remove symbolic link in F<~/.optex.d/bin> directory.\n" : "F<~/.optex.d/bin> 디렉터리에서 심볼릭 링크를 제거합니다.\n",
   "Set command aliases. Example:\n" : "명령 별칭을 설정합니다. 예시:\n",
   "Set commands for which B<optex> does not interpret module option B<-M>. If the target command is found in this list, it is executed as if option B<--no-module> is given to B<optex>.\n" : "B<옵텍스>가 모듈 옵션 B<-M>을 해석하지 않는 명령을 설정합니다. 이 목록에서 대상 명령이 발견되면 B<옵텍스>에 옵션 B<--no-module>이 주어진 것처럼 실행됩니다.\n",
   "Set module paths separated by colon (C<:>). These are inserted before standard path.\n" : "모듈 경로를 콜론(C<:>)으로 구분하여 설정합니다. 표준 경로 앞에 삽입됩니다.\n",
   "Standard modules are installed at C<App::optex>, and they can be addressed with and without C<App::optex> prefix.\n" : "표준 모듈은 C<앱::옵텍스>에 설치되며, C<앱::옵텍스> 접두사를 붙이거나 붙이지 않고 주소 지정이 가능합니다.\n",
   "Startup file for I<command>.\n" : "I<명령>의 시작 파일.\n",
   "Stop option manipulation. Use full pathname otherwise.\n" : "옵션 조작을 중지합니다. 그렇지 않으면 전체 경로명을 사용합니다.\n",
   "System module directory.\n" : "시스템 모듈 디렉토리.\n",
   "Target command is given as an argument:\n" : "대상 명령은 인자로 주어집니다:\n",
   "Then it can be used in more generic fashion. In the next example, first format is easy to read, but second one is more easy to type because it does not have special characters to be escaped.\n" : "그러면 좀 더 일반적인 방식으로 사용할 수 있습니다. 다음 예제에서는 첫 번째 형식이 읽기 쉽지만, 두 번째 형식은 이스케이프할 특수 문자가 없기 때문에 입력하기가 더 쉽습니다.\n",
   "Then next command will work as expected.\n" : "그러면 다음 명령이 예상대로 작동합니다.\n",
   "Then you can use them without module option. In this case, option C<--ru> is replaced by C<-Mi18n --ru> automatically.\n" : "그러면 모듈 옵션 없이 사용할 수 있습니다. 이 경우 옵션 C<--ru>가 C<-Mi18n --ru>로 자동 대체됩니다.\n",
   "These options are not effective when B<optex> was executed from symbolic link.\n" : "이 옵션은 심볼릭 링크에서 B<옵텍스>가 실행된 경우에는 적용되지 않습니다.\n",
   "Think of macOS's C<date> command, which does not have C<-I[TIMESPEC]> option. Using B<optex>, these can be implemented by preparing following setting in F<~/.optex.d/date.rc> file.\n" : "C<-I[TIMESPEC]> 옵션이 없는 macOS의 C<date> 명령을 생각해보세요. B<옵텍스>를 사용하면 F<~/.optex.d/date.rc> 파일에 다음 설정을 준비하여 이를 구현할 수 있습니다.\n",
   "This can be used like this:\n" : "다음과 같이 사용할 수 있습니다:\n",
   "This can be used like:\n" : "다음과 같이 사용할 수 있습니다:\n",
   "This is a normal Perl module, so package declaration and the final true value is necessary. Between them, you can put any kind of Perl code. For example, next program set environment variable C<LANG> to C<C> before executing C<date> command.\n" : "이것은 일반적인 Perl 모듈이므로 패키지 선언과 최종 참값이 필요합니다. 그 사이에 모든 종류의 Perl 코드를 넣을 수 있습니다. 예를 들어, 다음 프로그램은 C<date> 명령을 실행하기 전에 환경 변수 C<LANG>을 C<C>로 설정합니다.\n",
   "This is not necessary, but it seems a good idea to make special directory to contain symbolic links for B<optex>, placing it in your command search path. Then you can easily add/remove it from the path, or create/remove symbolic links.\n" : "반드시 필요한 것은 아니지만 B<옵텍스>에 대한 심볼릭 링크를 포함하는 특수 디렉터리를 만들어 명령 검색 경로에 배치하는 것이 좋습니다. 그러면 경로에서 쉽게 추가/제거하거나 심볼릭 링크를 생성/제거할 수 있습니다.\n",
   "This works fine almost always, but fails with sole C<--iso-8601> option preceding other option like this:\n" : "이것은 거의 항상 정상적으로 작동하지만, 이렇게 다른 옵션 앞에 C<--iso-8601> 옵션만 있으면 실패합니다:\n",
   "Usually B<optex> exits with status of executed command. This option override it and force to exit with specified status code.\n" : "일반적으로 B<옵텍스>는 실행된 명령의 상태와 함께 종료됩니다. 이 옵션은 이를 재정의하고 지정된 상태 코드로 강제로 종료합니다.\n",
   "When setting complex option, C<expand> directive is useful. C<expand> works almost same as C<option>, but effective only within the file scope, and not available for command line option.\n" : "복잡한 옵션을 설정할 때는 C<expand> 지시어가 유용합니다. C<expand>는 C<옵션>과 거의 동일하게 작동하지만 파일 범위 내에서만 유효하며 명령줄 옵션에는 사용할 수 없습니다.\n",
   "When starting up, B<optex> reads configuration file F<~/.optex.d/config.toml> which is supposed to be written in TOML format.\n" : "시작할 때 B<optex>는 TOML 형식으로 작성된 구성 파일 F<~/.optex.d/config.toml>을 읽습니다.\n",
   "When the specified module was not found in library path, B<optex> ignores the option and stops argument processing immediately. Ignored options are passed through to the target command.\n" : "라이브러리 경로에서 지정한 모듈을 찾지 못하면 B<옵텍스>는 옵션을 무시하고 즉시 인자 처리를 중지합니다. 무시된 옵션은 대상 명령으로 전달됩니다.\n",
   "You can declare autoload module in your F<~/.optex.d/optex.rc> like:\n" : "F<~/.optex.d/optex.rc>에 다음과 같이 자동 로드 모듈을 선언할 수 있습니다:\n",
   "You can display a Greek calendar by doing the following:\n" : "다음을 수행하여 그리스 달력을 표시할 수 있습니다:\n",
   "optex - General purpose command option wrapper\n" : "optex - 범용 명령 옵션 래퍼\n",
   "or I<command> -> B<optex> symlink, or\n" : "또는 I<명령> -> B<옵텍스> 심볼릭 링크, 또는\n",
   "or as a symbolic linked file to B<optex>:\n" : "또는 B<옵텍스>에 대한 심볼릭 링크 파일로 지정할 수 있습니다:\n"
}
